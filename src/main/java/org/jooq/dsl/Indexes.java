/*
 * This file is generated by jOOQ.
 */
package org.jooq.dsl;


import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.dsl.tables.Entry;
import org.jooq.dsl.tables.FlywaySchemaHistory;
import org.jooq.dsl.tables.Group;
import org.jooq.dsl.tables.Translation;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>mvp</code> schema.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index ENTRY_GROUP_CODE_CODE_IDX = Indexes0.ENTRY_GROUP_CODE_CODE_IDX;
    public static final Index FLYWAY_SCHEMA_HISTORY_S_IDX = Indexes0.FLYWAY_SCHEMA_HISTORY_S_IDX;
    public static final Index GROUP_CODE_IDX = Indexes0.GROUP_CODE_IDX;
    public static final Index TRANSLATION_KEY_LOCALE_IDX = Indexes0.TRANSLATION_KEY_LOCALE_IDX;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index ENTRY_GROUP_CODE_CODE_IDX = Internal.createIndex("entry_group_code_code_idx", Entry.ENTRY, new OrderField[]{Entry.ENTRY.GROUP_CODE, Entry.ENTRY.CODE}, true);
        public static Index FLYWAY_SCHEMA_HISTORY_S_IDX = Internal.createIndex("flyway_schema_history_s_idx", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, new OrderField[]{FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.SUCCESS}, false);
        public static Index GROUP_CODE_IDX = Internal.createIndex("group_code_idx", Group.GROUP, new OrderField[]{Group.GROUP.CODE}, true);
        public static Index TRANSLATION_KEY_LOCALE_IDX = Internal.createIndex("translation_key_locale_idx", Translation.TRANSLATION, new OrderField[]{Translation.TRANSLATION.KEY, Translation.TRANSLATION.LOCALE}, true);
    }
}
