openapi: 3.0.0
servers: []
info:
  version: 0.4.6
  title: Reference Data MS
  description: |
    The Reference Data microservice is a foundational service for centrally managing and serving reference data for all channels.
    * [Arch Design Doc](https://confluence.ocbc.com/display/DigitalCore/Reference+Data?src=contextnavpagetreemode)
    * [Development Roadmap](https://confluence.ocbc.com/pages/viewpage.action?pageId=21775209&src=contextnavpagetreemode)
security:
  - accessCode:
      - read
      - write

tags:
  - name: Customer
    description: Customer facing external APIs
  - name: Admin
    description: Internal APIs for Back Office
  - name: Service
    description: Internal APIs for internal microservices
  - name: Infra
    description: Internal APIs for infrastructure monitoring needs

paths:
  /health:
    get:
      tags:
        - Infra
      summary: Server heartbeats
      description: |
        Infra inspect app health by calling the API.
      security: []
      responses:
        '200':
          $ref: '#/components/responses/200'

  /ref-group/{ref_group_code}/ref_entries/:
    get:
      tags:
        - Customer
      summary: |
        Retrieve a set of Ref Entries under a Ref Group
      description: |
        1. Additionally supports filtering by JSONPath if client only needs a subset
      security: []
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/RefGroupCode'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: |
            1. Total is returned for forming pagination at UI
            2. Caching would be implemented over the full result set without any filtering criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  Filter:
                    description: Same value as the request
                    type: string
                  Page:
                    description: Same value as the request
                    type: integer
                  PageSize:
                    description: Same value as the request or default
                    type: integer
                  Total:
                    description: Total records
                    type: integer
                  Result:
                    type: array
                    items:
                      $ref: '#/components/schemas/RefEntryUser'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /service/ref-group/{ref_group_code}/ref_entries/:
    get:
      tags:
        - Service
      summary: |
        Retrieve a set of Ref Entries under a Ref Group
      description: |
        1. Additionally supports filtering by JSONPath if client only needs a subset
      security: []
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/RefGroupCode'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: |
            1. Total is returned for forming pagination at UI
            2. Caching would be implemented over the full result set without any filtering criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  Page:
                    description: Same value as the request
                    type: integer
                  PageSize:
                    description: Same value as the request or default
                    type: integer
                  Total:
                    description: Total records
                    type: integer
                  Result:
                    type: array
                    items:
                      $ref: '#/components/schemas/RefEntry'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /service/ref-group/{ref_group_code}/ref-entry/{ref_entry_code}:
    get:
      tags:
        - Service
      summary: |
        Retrieve one item from a Ref Group using its code
      description: |
      security: []
      parameters:
        - $ref: '#/components/parameters/RefGroupCode'
        - $ref: '#/components/parameters/RefEntryCode'
      responses:
        '200':
          description: |
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefEntry'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /admin/ref-groups:
    get:
      tags:
        - Admin
      summary: Retrieve all the existing groups.
      description: |
        1. Aware of admin entitlement. The `allow` field of RefGroup indicates
      security: []
      parameters: []
      responses:
        '200':
          description: |
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RefGroup'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /admin/ref-group/{ref_group_code}:
    get:
      tags:
        - Admin
      summary: Retrieve only one RefGroup by its code with configuration details
      description: |
      security: []
      parameters:
        - $ref: '#/components/parameters/RefGroupCode'
      responses:
        '200':
          description: |
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefGroup'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /admin/ref-group/{ref_group_code}/set:
    post:
      tags:
        - Admin
      summary: Change the configuration detail of a RefGroup, or create a RefGroup if the `code` doesn't exists.
      description: |
        1. Success depending on entitlement of the viewer
      security: []
      parameters:
        - $ref: '#/components/parameters/RefGroupCode'
      requestBody:
        description: |
          1. `code` field would be ignored as it's immutable
          2. Validity check on `custom_schema` and `custom_forms` based on their protocol
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefGroup'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /admin/ref-group/{ref_group_code}/unset:
    post:
      tags:
        - Admin
      summary: Remove a RefGroup permenantly.
      description: |
        1. Success depending on entitlement of the viewer
        2. Return 400 if RefGroup is NOT an empty group
        3. Back Office Admin should use with extreme caution about whether has existing use cases
      security: []
      parameters:
        - $ref: '#/components/parameters/RefGroupCode'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /admin/ref-group/{ref_group_code}/ref-entries/:
    get:
      tags:
        - Admin
      summary: Retrieve all the RefEntries of a RefGroup
      description: |
        1. Support pagination with default page size 20
      security: []
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/RefGroupCode'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: |
            1. Total is returned for forming pagination at UI
            2. Caching would be implemented over the full result set without any filtering criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  Page:
                    description: Same value as the request
                    type: integer
                  PageSize:
                    description: Same value as the request or default
                    type: integer
                  Total:
                    description: Total records
                    type: integer
                  Result:
                    type: array
                    items:
                      $ref: '#/components/schemas/RefEntry'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /admin/ref-group/{ref_group_code}/ref-entry/{ref_entry_code}:
    get:
      tags:
        - Admin
      summary: Retrieve only one RefEntry with all its detail
      description: |
      security: []
      parameters:
        - $ref: '#/components/parameters/RefGroupCode'
        - $ref: '#/components/parameters/RefEntryCode'
      responses:
        '200':
          description: |
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefEntry'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /admin/ref-group/{ref_group_code}/ref-entry/{ref_entry_code}/set:
    post:
      tags:
        - Admin
      summary: Create
      description: |
        Change the configuration detail of a RefEntry, or create a RefEntry if the `code` doesn't exists.
      security: []
      parameters:
        - $ref: '#/components/parameters/RefGroupCode'
        - $ref: '#/components/parameters/RefEntryCode'
      requestBody:
        description: |
          1. `custom_fields` is governed by the `custom_schema` of its parent RefGroup.
          2. 400 would be returned if the data or format doesn't comply to the JSON-SCHEMA.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefEntry'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /admin/ref-group/{ref_group_code}/ref-entry/{ref_entry_code}/unset:
    post:
      tags:
        - Admin
      summary: Remove an RefEntry identified by its `code`
      description: |
      security: []
      parameters:
        - $ref: '#/components/parameters/RefGroupCode'
        - $ref: '#/components/parameters/RefEntryCode'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /admin/translations/:
    get:
      tags:
        - Admin
      summary: Retrieve all existing translation keys
      description: |
        1. Support pagination based on chronical order of Translation key
      security: []
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: |
            1. Total is returned for forming pagination at UI
          content:
            application/json:
              schema:
                type: object
                properties:
                  Page:
                    description: Same value as the request
                    type: integer
                  PageSize:
                    description: Same value as the request or default
                    type: integer
                  Total:
                    description: Total records
                    type: integer
                  Result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Translation'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'


  /admin/translation/{translation_key}/:
    get:
      tags:
        - Admin
      summary: Server heartbeat operation
      description: |
        The health heartbeat API for infra.
      security: []
      parameters:
        - $ref: '#/components/parameters/TranslationKey'
      responses:
        '200':
          description: |
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TranslationEntry'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /admin/translation/{translation_key}/{locale}/set:
    post:
      tags:
        - Admin
      summary: Server heartbeat operation
      description: |
        The health heartbeat API for infra.
      security: []
      parameters:
        - $ref: '#/components/parameters/TranslationKey'
        - $ref: '#/components/parameters/Locale'
      requestBody:
        description: |
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslationEntry'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /admin/translation/{translation_key}/{locale}/unset:
    post:
      tags:
        - Admin
      summary: Server heartbeat operation
      description: |
        The health heartbeat API for infra.
      security: []
      parameters:
        - $ref: '#/components/parameters/TranslationKey'
        - $ref: '#/components/parameters/Locale'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /service/ref-groups/fast-banks/ref-entries/:
    get:
      tags:
        - Service
      summary: |
        Retrieve a set of Ref Entries under a Ref Group `Fast Bank`
      description: |
      security: []
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: |
          content:
            application/json:
              schema:
                type: object
                properties:
                  Filter:
                    description: Same value as the request
                    type: string
                  Page:
                    description: Same value as the request
                    type: integer
                  PageSize:
                    description: Same value as the request or default
                    type: integer
                  Total:
                    description: Total records
                    type: integer
                  Result:
                    type: array
                    items:
                      $ref: '#/components/schemas/RefEntryFast'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'


components:
  securitySchemes:
    accessCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'http://example.com/oauth/auth'
          tokenUrl: 'http://example.com/oauth/token'
          scopes:
            write: allows modifying resources
            read: allows reading resources
  parameters:
    Page:
      name: page
      in: query
      description: The target page to fetch. Default to 1.
      required: false
      schema:
        type: integer
    PageSize:
      name: page_size
      in: query
      description: The page size. Implementation should maintain a default page size.
      required: false
      schema:
        type: integer
    RefGroupCode:
      in: path
      name: ref_group_code
      schema:
        type: string
      required: true
      description:  ref_group_code
    RefEntryCode:
      in: path
      name: ref_entry_code
      schema:
        type: string
      required: true
      description:  ref_entry_code
    Locale:
      name: locale
      in: path
      description: |
        1. `locale` follows the HTTP-Header [Accept-Language](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language)
      required: true
      schema:
        type: string
    TranslationKey:
      name: translation_key
      in: path
      description: |
        1. A string key that identifies a set of translation based on `locale`
        2. Translation is activated by using this patthen `{{translation_key}}` in the content of a field that enabled translation.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 200
    Filter:
      name: filter
      in: query
      description: |
        1. Filter the complete result set with a criteria string based on [JSONPath](https://www.baeldung.com/guide-to-jayway-jsonpath)
      required: false
      schema:
        type: string
  responses:
    200:
      description: |
        1. Indicates the request is processed correctly
        2. For certain product cases, it can mean an acceptable error that the client UI flow has a clearly defined route to handle it, and won't be tracked as error. Use `ExtraInfo` to return the detail info.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExtraInfo'
    400:
      description: |
        1. Indicates the request has a problem of either
          1. Param errors or breaking certai feature specific constraint
          2. Authentication failure
          3. Other errors that client or user is responsible for
        2. Use `ExtraInfo` to return the error detail for client to react accordingly
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExtraInfo'
    500:
      description: |
        1. Indicates the server processing has generate an error the server side is responsible for
        2. Use `ExtraInfo` to return the error detail if necessary
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExtraInfo'

  schemas:
    ExtraInfo:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    Permissions:
      description: |
        1. Permission is to instruct the BackOffice UI to show valid buttons for the item.
        2. It only shows up in Back Office Admin APIs
        3. (IMPORTANT) This field may change after finalising on how the Entitlement service works.
      type: array
      items:
        type: string
        enum:
          - EDIT
          - REMOVE
    RefGroup:
      description: |
        1. A collection of reference data entries that shares the same schema.
        2. Uniquely identified by its `code`.
      type: object
      properties:
        code:
          description: |
            1. Unique key to identify a RefGroup
            2. Ignored during modification actions
            3. Returned during query actions
          type: string
          minLength: 2
          maxLength: 32
        name:
          description: |
            1. Displayable title for mainly BackOffice
          type: string
          minLength: 5
          maxLength: 200
        desc:
          description: |
            1. Used by BackOffice to document the purpose and matters that require attention.
          type: string
          minLength: 0
          maxLength: 5000
        custom_schema:
          $ref: '#/components/schemas/JSONScheme'
        custom_forms:
          $ref: '#/components/schemas/JSONForms'
        allow:
          $ref: '#/components/schemas/Permissions'
      required:
        - name
        - desc
        - custom_schema
        - custom_forms
    RefEntry:
      description: |
        1. RefEntry is contained by only one RefGroup and share schema with its siblings
        2. The actual data is stored in `custom_fields`
        3. Each entry is uniquely identified by a unique `code`
      type: object
      properties:
        ref_group_code:
          description: |
            1. The unique `code` of the parent RefGroup
          type: string
          minLength: 2
          maxLength: 32
        code:
          description: |
            1. The unique `code` of this RefEntry
          type: string
          minLength: 2
          maxLength: 32
        desc:
          description: |
            1. Used by BackOffice to document the purpose and matters that require attention.
          type: string
          minLength: 0
          maxLength: 1000
        sec_id:
          description: |
            1. Extra factor to adjust the ordering of a list of RefEntry.
            2. Default to 0; a larger value brings the RefEntry to the top.
            2. Expected order in SQL query is `order by sec_id desc, id asc`
          type: integer
        custom_fields:
          $ref: '#/components/schemas/CustomFields'
        allow:
          $ref: '#/components/schemas/Permissions'
      required:
        - ref_group_code
        - code
        - custom_fields
    RefEntryUser:
      description: |
        1. RefEntry is contained by only one RefGroup and share schema with its siblings
        2. The `data` field contains the data from `custom_fields` in table
        3. Each entry is uniquely identified by a unique `code`
      type: object
      properties:
        code:
          description: |
            1. The unique `code` of this RefEntry
          type: string
          minLength: 2
          maxLength: 32
        data:
          $ref: '#/components/schemas/CustomFields'
      required:
        - code
        - data
    TranslationEntry:
      description: |
        1. the actual translation based on `locale`
        2. `locale` field would be ignored during set action
      type: object
      properties:
        locale:
          description: |
            1. `locale` follows the HTTP-Header [Accept-Language](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language)
          type: string
        value:
          description: |
            1. the actual translated text to return to UI
            2. loose constrain on size so that can put a paragraph under one key if required
          type: string
          minLength: 1
          maxLength: 10000
      required:
        - key
        - locale
        - value
    Translation:
      type: object
      properties:
        key:
          type: string
          minLength: 1
          maxLength: 200
        entries:
          type: array
          items:
            $ref: '#/components/schemas/TranslationEntry'
    JSONScheme:
      description: |
        1. A field storing a valid JSON-Schema definition
        2. Default: {}
        3. See [json-schema.org](https://json-schema.org/)
      type: object
    JSONForms:
      description: |
        1. A field storing a valid JSON-Forms definition
        2. Default: {}
        3. See [jsonforms.io](https://jsonforms.io/)
      type: object
    CustomFields:
      description: |
        1. A JSONB column in database that store arbitrary data of the RefEntry
        2. The actual data is stored in `custom_fields` as JSON object with format defined in RefGroup's `custom_schema`
        3. The data in `custom_field` is exactly what would be returned to user who's gonna consume. Client is in charge of any further transformation for UI's special needs.
        4. Default to {}
      type: object
    RefEntryFast:
      description: |
        1. RefEntryFast is specific version of RefEntry for FastBank
        2. The actual data is stored in `custom_fields`
        3. Each entry is uniquely identified by a unique `code`
      type: object
      properties:
        code:
          description: |
            1. The unique `code` of this RefEntryFast
          type: string
          minLength: 2
          maxLength: 32
        data:
          $ref: '#/components/schemas/CustomFieldsFast'
      required:
        - code
        - data
    CustomFieldsFast:
      description: |
        1. A JSONB column in database that store arbitrary data of the RefEntry for FastBank case
      type: object
      properties:
        bank_name:
          type: string
        bic_code:
          type: string
        extra_payer_account_types:
          type: array
          items:
            type: string
        extra_recipient_account_types:
          type: array
          items:
            type: string